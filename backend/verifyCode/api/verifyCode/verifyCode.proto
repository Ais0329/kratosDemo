syntax = "proto3";

package api.verifyCode;

//代码生成在哪个目录下面；属于go的哪个包
option go_package = "verifyCode/api/verifyCode;verifyCode";
option java_multiple_files = true;
option java_package = "api.verifyCode";

service VerifyCode {
	//自动生成的一些增删改查的方法
//	rpc CreateVerifyCode (CreateVerifyCodeRequest) returns (CreateVerifyCodeReply);
//	rpc UpdateVerifyCode (UpdateVerifyCodeRequest) returns (UpdateVerifyCodeReply);
//	rpc DeleteVerifyCode (DeleteVerifyCodeRequest) returns (DeleteVerifyCodeReply);
	rpc GetVerifyCode (GetVerifyCodeRequest) returns (GetVerifyCodeReply);
//	rpc ListVerifyCode (ListVerifyCodeRequest) returns (ListVerifyCodeReply);
}

//message CreateVerifyCodeRequest {}
//message CreateVerifyCodeReply {}
//
//message UpdateVerifyCodeRequest {}
//message UpdateVerifyCodeReply {}
//
//message DeleteVerifyCodeRequest {}
//message DeleteVerifyCodeReply {}
// 类型常量，分别对应着想要什么样的验证码
enum TYPE {
	DEFAULT = 0;
	DIGIT = 1;
	LETTER = 2;
	MIXED = 3;
};

// 这个是request，是请求的参数
message GetVerifyCodeRequest {
	//    验证码长度
	uint32 length = 1;
	// 验证码类型
	TYPE type = 2;
}
//这里是返回的参数
message GetVerifyCodeReply {
	string code = 1;
}

//message ListVerifyCodeRequest {}
//message ListVerifyCodeReply {}